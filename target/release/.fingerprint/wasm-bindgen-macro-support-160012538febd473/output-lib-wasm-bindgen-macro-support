{"message":"failed to resolve: could not find `parse_quote_spanned` in `syn`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-bindgen-macro-support-0.2.83/src/parser.rs","byte_start":3539,"byte_end":3558,"line_start":110,"line_end":110,"column_start":38,"column_end":57,"is_primary":true,"text":[{"text":"                                syn::parse_quote_spanned!(*span => $name)","highlight_start":38,"highlight_end":57}],"label":"could not find `parse_quote_spanned` in `syn`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-bindgen-macro-support-0.2.83/src/parser.rs","byte_start":1212,"byte_end":2816,"line_start":56,"line_end":90,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $mac! {","highlight_start":9,"highlight_end":16},{"text":"            (catch, Catch(Span)),","highlight_start":1,"highlight_end":34},{"text":"            (constructor, Constructor(Span)),","highlight_start":1,"highlight_end":46},{"text":"            (method, Method(Span)),","highlight_start":1,"highlight_end":36},{"text":"            (static_method_of, StaticMethodOf(Span, Ident)),","highlight_start":1,"highlight_end":61},{"text":"            (js_namespace, JsNamespace(Span, Vec<String>, Vec<Span>)),","highlight_start":1,"highlight_end":71},{"text":"            (module, Module(Span, String, Span)),","highlight_start":1,"highlight_end":50},{"text":"            (raw_module, RawModule(Span, String, Span)),","highlight_start":1,"highlight_end":57},{"text":"            (inline_js, InlineJs(Span, String, Span)),","highlight_start":1,"highlight_end":55},{"text":"            (getter, Getter(Span, Option<Ident>)),","highlight_start":1,"highlight_end":51},{"text":"            (setter, Setter(Span, Option<Ident>)),","highlight_start":1,"highlight_end":51},{"text":"            (indexing_getter, IndexingGetter(Span)),","highlight_start":1,"highlight_end":53},{"text":"            (indexing_setter, IndexingSetter(Span)),","highlight_start":1,"highlight_end":53},{"text":"            (indexing_deleter, IndexingDeleter(Span)),","highlight_start":1,"highlight_end":55},{"text":"            (structural, Structural(Span)),","highlight_start":1,"highlight_end":44},{"text":"            (r#final, Final(Span)),","highlight_start":1,"highlight_end":36},{"text":"            (readonly, Readonly(Span)),","highlight_start":1,"highlight_end":40},{"text":"            (js_name, JsName(Span, String, Span)),","highlight_start":1,"highlight_end":51},{"text":"            (js_class, JsClass(Span, String, Span)),","highlight_start":1,"highlight_end":53},{"text":"            (inspectable, Inspectable(Span)),","highlight_start":1,"highlight_end":46},{"text":"            (is_type_of, IsTypeOf(Span, syn::Expr)),","highlight_start":1,"highlight_end":53},{"text":"            (extends, Extends(Span, syn::Path)),","highlight_start":1,"highlight_end":49},{"text":"            (no_deref, NoDeref(Span)),","highlight_start":1,"highlight_end":39},{"text":"            (vendor_prefix, VendorPrefix(Span, Ident)),","highlight_start":1,"highlight_end":56},{"text":"            (variadic, Variadic(Span)),","highlight_start":1,"highlight_end":40},{"text":"            (typescript_custom_section, TypescriptCustomSection(Span)),","highlight_start":1,"highlight_end":72},{"text":"            (skip_typescript, SkipTypescript(Span)),","highlight_start":1,"highlight_end":53},{"text":"            (start, Start(Span)),","highlight_start":1,"highlight_end":34},{"text":"            (skip, Skip(Span)),","highlight_start":1,"highlight_end":32},{"text":"            (typescript_type, TypeScriptType(Span, String, Span)),","highlight_start":1,"highlight_end":67},{"text":"            (getter_with_clone, GetterWithClone(Span)),","highlight_start":1,"highlight_end":56},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            // For testing purposes only.","highlight_start":1,"highlight_end":42},{"text":"            (assert_no_shim, AssertNoShim(Span)),","highlight_start":1,"highlight_end":50},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-bindgen-macro-support-0.2.83/src/parser.rs","byte_start":6911,"byte_end":6928,"line_start":215,"line_end":215,"column_start":5,"column_end":22,"is_primary":false,"text":[{"text":"    attrgen!(methods);","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"attrgen!","def_site_span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-bindgen-macro-support-0.2.83/src/parser.rs","byte_start":1159,"byte_end":1179,"line_start":54,"line_end":54,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! attrgen {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"methods!","def_site_span":{"file_name":"/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-bindgen-macro-support-0.2.83/src/parser.rs","byte_start":2827,"byte_end":2847,"line_start":94,"line_end":94,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! methods {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `parse_quote_spanned` in `syn`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-bindgen-macro-support-0.2.83/src/parser.rs:110:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                syn::parse_quote_spanned!(*span => $name)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `parse_quote_spanned` in `syn`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    attrgen!(methods);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `methods` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0433`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0433`.\u001b[0m\n"}
